name: ngsa Build

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - main

    paths:
    - 'NewApp/ngsa-csharp/**'
    - '.github/workflows/NewApp.yaml'

  push:
    branches:
      - main

    paths:
    - 'NewApp/ngsa-csharp/**'
    - '.github/workflows/NewApp.yaml'

    tags:
      - v*

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      # copy the config value to environment variables
      # do not copy the actual secrets!

      APP_REPO: retaildevcrew/ngsa-app
      DS_REPO: retaildevcrew/ngsa-dataservice
      LR_REPO: retaildevcrew/loderunner

      # These are used in if: conditions
      DOCKER_SET: false
      COSMOS_SET: false
      BUILD: true

    steps:
    - uses: actions/checkout@v2

    - name: Set conditions
      run: |
        # check that all Docker secrets are set
        if [[ "${{ secrets.DOCKER_PAT }}" != "" && "${{ secrets.NGSA_REPO }}" != "" && "${{ secrets.DOCKER_USER }}" != "" ]];
        then
          echo "DOCKER_SET=true" >> $GITHUB_ENV
        fi
        
        if [[ "${{ secrets.CosmosUrl }}" != "" && "${{ secrets.CosmosKey }}" != "" ]];
        then
          echo '${{ secrets.CosmosUrl }}' > src/ngsa/app/secrets/CosmosUrl
          echo '${{ secrets.CosmosKey }}' > src/ngsa/app/secrets/CosmosKey
          echo "COSMOS_SET=true" >> $GITHUB_ENV
        fi

    - name: PR Closed
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && ! github.event.pull_request.merged }}
      run: |

        # handle PR Closed event by building / pushing main branch
        
        # checkout parent branch (usually "main")
        git config pull.ff only
        git fetch --all
        git checkout ${{ github.base_ref }}
        git pull

    - name: PR Merged
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged }}
      run: |

        # Do not build on PR Merged
        
        # Skip remaining steps
        echo "DOCKER_SET=false" >> $GITHUB_ENV
        echo "COSMOS_SET=false" >> $GITHUB_ENV
        echo "BUILD=false" >> $GITHUB_ENV

    - name: Docker Login
      if: ${{ env.DOCKER_SET == 'true' }}
      run: |
        # login to dockerhub
        echo "${{ secrets.DOCKER_PAT }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

    - name: Docker Pull Test
      if: ${{ env.BUILD == 'true' }}
      run: |
        # Pull the latest image if needed
        # This doesn't have to be a separate step, but makes the output easier to read and debug
        docker pull mcr.microsoft.com/dotnet/core/sdk:3.1

    - name: Docker Build Data Service
      if: ${{ env.BUILD == 'true' }}
      run: |
        docker build . -t ds -f NewApp/ngsa-csharp/Ngsa.DataService/Dockerfile --target test

    - name: Docker Build App
      if: ${{ env.BUILD == 'true' }}
      run: |
        docker build . -t app -f NewApp/ngsa-csharp/Ngsa.App/Dockerfile --target test

    - name: Docker Build Loadrunner
      if: ${{ env.BUILD == 'true' }}
      run: |
        docker build . -t LR -f NewApp/ngsa-csharp/Ngsa.LodeRunner/Dockerfile
  
